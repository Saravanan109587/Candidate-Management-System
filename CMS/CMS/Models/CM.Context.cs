//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SANGEntities : DbContext
    {
        public SANGEntities()
            : base("name=SANGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<kmit_CandidateDetail> kmit_CandidateDetail { get; set; }
        public virtual DbSet<kmit_Departments> kmit_Departments { get; set; }
        public virtual DbSet<kmit_UserLog> kmit_UserLog { get; set; }
        public virtual DbSet<Kmit_Admin> Kmit_Admin { get; set; }
    
        public virtual ObjectResult<string> sp_addcandidates(string fname, string email, string phone, Nullable<System.DateTime> dateOfInterview, Nullable<System.DateTime> dOb, Nullable<int> currentCTC, Nullable<int> expectedCTC, Nullable<int> experience, Nullable<int> noticePeriod, string interviewer, string commentsfromInterviewer, string hometown, string updtaeId, string lastName, string commentsFRomHr, string status, string department, Nullable<System.DateTime> dateOfPhoneInterview, string referedBy)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var dateOfInterviewParameter = dateOfInterview.HasValue ?
                new ObjectParameter("dateOfInterview", dateOfInterview) :
                new ObjectParameter("dateOfInterview", typeof(System.DateTime));
    
            var dObParameter = dOb.HasValue ?
                new ObjectParameter("DOb", dOb) :
                new ObjectParameter("DOb", typeof(System.DateTime));
    
            var currentCTCParameter = currentCTC.HasValue ?
                new ObjectParameter("CurrentCTC", currentCTC) :
                new ObjectParameter("CurrentCTC", typeof(int));
    
            var expectedCTCParameter = expectedCTC.HasValue ?
                new ObjectParameter("ExpectedCTC", expectedCTC) :
                new ObjectParameter("ExpectedCTC", typeof(int));
    
            var experienceParameter = experience.HasValue ?
                new ObjectParameter("Experience", experience) :
                new ObjectParameter("Experience", typeof(int));
    
            var noticePeriodParameter = noticePeriod.HasValue ?
                new ObjectParameter("NoticePeriod", noticePeriod) :
                new ObjectParameter("NoticePeriod", typeof(int));
    
            var interviewerParameter = interviewer != null ?
                new ObjectParameter("Interviewer", interviewer) :
                new ObjectParameter("Interviewer", typeof(string));
    
            var commentsfromInterviewerParameter = commentsfromInterviewer != null ?
                new ObjectParameter("CommentsfromInterviewer", commentsfromInterviewer) :
                new ObjectParameter("CommentsfromInterviewer", typeof(string));
    
            var hometownParameter = hometown != null ?
                new ObjectParameter("Hometown", hometown) :
                new ObjectParameter("Hometown", typeof(string));
    
            var updtaeIdParameter = updtaeId != null ?
                new ObjectParameter("updtaeId", updtaeId) :
                new ObjectParameter("updtaeId", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var commentsFRomHrParameter = commentsFRomHr != null ?
                new ObjectParameter("CommentsFRomHr", commentsFRomHr) :
                new ObjectParameter("CommentsFRomHr", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var dateOfPhoneInterviewParameter = dateOfPhoneInterview.HasValue ?
                new ObjectParameter("dateOfPhoneInterview", dateOfPhoneInterview) :
                new ObjectParameter("dateOfPhoneInterview", typeof(System.DateTime));
    
            var referedByParameter = referedBy != null ?
                new ObjectParameter("ReferedBy", referedBy) :
                new ObjectParameter("ReferedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_addcandidates", fnameParameter, emailParameter, phoneParameter, dateOfInterviewParameter, dObParameter, currentCTCParameter, expectedCTCParameter, experienceParameter, noticePeriodParameter, interviewerParameter, commentsfromInterviewerParameter, hometownParameter, updtaeIdParameter, lastNameParameter, commentsFRomHrParameter, statusParameter, departmentParameter, dateOfPhoneInterviewParameter, referedByParameter);
        }
    
        public virtual ObjectResult<string> sp_GetAllDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAllDepartments");
        }
    
        public virtual ObjectResult<sp_GetValidAdmin2_Result> sp_GetValidAdmin2(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetValidAdmin2_Result>("sp_GetValidAdmin2", nameParameter);
        }
    
        public virtual ObjectResult<sp_SerarchCandidateDetails2_Result> sp_SerarchCandidateDetails2(string name, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SerarchCandidateDetails2_Result>("sp_SerarchCandidateDetails2", nameParameter, emailParameter);
        }
    
        public virtual int sp_UpdateCandidate(string fname, string email, string phone, Nullable<System.DateTime> dateOfInterview, Nullable<System.DateTime> dOb, Nullable<int> currentCTC, Nullable<int> expectedCTC, Nullable<int> experience, Nullable<int> noticePeriod, string interviewer, string commentsfromInterviewer, string hometown, string updtaeId, string lastName, string commentsFRomHr, string status, string department, Nullable<System.DateTime> dateOfPhoneInterview, string referedBy)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var dateOfInterviewParameter = dateOfInterview.HasValue ?
                new ObjectParameter("dateOfInterview", dateOfInterview) :
                new ObjectParameter("dateOfInterview", typeof(System.DateTime));
    
            var dObParameter = dOb.HasValue ?
                new ObjectParameter("DOb", dOb) :
                new ObjectParameter("DOb", typeof(System.DateTime));
    
            var currentCTCParameter = currentCTC.HasValue ?
                new ObjectParameter("CurrentCTC", currentCTC) :
                new ObjectParameter("CurrentCTC", typeof(int));
    
            var expectedCTCParameter = expectedCTC.HasValue ?
                new ObjectParameter("ExpectedCTC", expectedCTC) :
                new ObjectParameter("ExpectedCTC", typeof(int));
    
            var experienceParameter = experience.HasValue ?
                new ObjectParameter("Experience", experience) :
                new ObjectParameter("Experience", typeof(int));
    
            var noticePeriodParameter = noticePeriod.HasValue ?
                new ObjectParameter("NoticePeriod", noticePeriod) :
                new ObjectParameter("NoticePeriod", typeof(int));
    
            var interviewerParameter = interviewer != null ?
                new ObjectParameter("Interviewer", interviewer) :
                new ObjectParameter("Interviewer", typeof(string));
    
            var commentsfromInterviewerParameter = commentsfromInterviewer != null ?
                new ObjectParameter("CommentsfromInterviewer", commentsfromInterviewer) :
                new ObjectParameter("CommentsfromInterviewer", typeof(string));
    
            var hometownParameter = hometown != null ?
                new ObjectParameter("Hometown", hometown) :
                new ObjectParameter("Hometown", typeof(string));
    
            var updtaeIdParameter = updtaeId != null ?
                new ObjectParameter("updtaeId", updtaeId) :
                new ObjectParameter("updtaeId", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var commentsFRomHrParameter = commentsFRomHr != null ?
                new ObjectParameter("CommentsFRomHr", commentsFRomHr) :
                new ObjectParameter("CommentsFRomHr", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var dateOfPhoneInterviewParameter = dateOfPhoneInterview.HasValue ?
                new ObjectParameter("dateOfPhoneInterview", dateOfPhoneInterview) :
                new ObjectParameter("dateOfPhoneInterview", typeof(System.DateTime));
    
            var referedByParameter = referedBy != null ?
                new ObjectParameter("ReferedBy", referedBy) :
                new ObjectParameter("ReferedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCandidate", fnameParameter, emailParameter, phoneParameter, dateOfInterviewParameter, dObParameter, currentCTCParameter, expectedCTCParameter, experienceParameter, noticePeriodParameter, interviewerParameter, commentsfromInterviewerParameter, hometownParameter, updtaeIdParameter, lastNameParameter, commentsFRomHrParameter, statusParameter, departmentParameter, dateOfPhoneInterviewParameter, referedByParameter);
        }
    
        public virtual ObjectResult<string> sp_ValidateUser(string userName, string email)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ValidateUser", userNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<sp_SerarchCandidateDetails_Result> sp_SerarchCandidateDetails(string name, string phoneNumber, string department, string status, string interviewer, string referedBy, string hometown, Nullable<int> currentCTC, Nullable<int> expecCTC, string dateOfInterview, string dateofPhoneinterview, Nullable<int> noticeperiod, Nullable<int> experience, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var interviewerParameter = interviewer != null ?
                new ObjectParameter("interviewer", interviewer) :
                new ObjectParameter("interviewer", typeof(string));
    
            var referedByParameter = referedBy != null ?
                new ObjectParameter("referedBy", referedBy) :
                new ObjectParameter("referedBy", typeof(string));
    
            var hometownParameter = hometown != null ?
                new ObjectParameter("hometown", hometown) :
                new ObjectParameter("hometown", typeof(string));
    
            var currentCTCParameter = currentCTC.HasValue ?
                new ObjectParameter("currentCTC", currentCTC) :
                new ObjectParameter("currentCTC", typeof(int));
    
            var expecCTCParameter = expecCTC.HasValue ?
                new ObjectParameter("ExpecCTC", expecCTC) :
                new ObjectParameter("ExpecCTC", typeof(int));
    
            var dateOfInterviewParameter = dateOfInterview != null ?
                new ObjectParameter("DateOfInterview", dateOfInterview) :
                new ObjectParameter("DateOfInterview", typeof(string));
    
            var dateofPhoneinterviewParameter = dateofPhoneinterview != null ?
                new ObjectParameter("dateofPhoneinterview", dateofPhoneinterview) :
                new ObjectParameter("dateofPhoneinterview", typeof(string));
    
            var noticeperiodParameter = noticeperiod.HasValue ?
                new ObjectParameter("noticeperiod", noticeperiod) :
                new ObjectParameter("noticeperiod", typeof(int));
    
            var experienceParameter = experience.HasValue ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SerarchCandidateDetails_Result>("sp_SerarchCandidateDetails", nameParameter, phoneNumberParameter, departmentParameter, statusParameter, interviewerParameter, referedByParameter, hometownParameter, currentCTCParameter, expecCTCParameter, dateOfInterviewParameter, dateofPhoneinterviewParameter, noticeperiodParameter, experienceParameter, emailParameter);
        }
    }
}
